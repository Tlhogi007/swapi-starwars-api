{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Letlhogonolo\\\\Documents\\\\Projects\\\\React\\\\starwars\\\\client\\\\src\\\\components\\\\Characters\\\\Characters.tsx\";\nimport React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Heading, Container } from \"./styles\";\nimport Character from \"./Character/Character\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PEOPLE_QUERY = gql`\n  query PeopleQuery {\n    people {\n      name\n      gender\n      mass\n      height\n      homeworld\n      url\n    }\n  }\n`;\nexport class Characters extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Star Wars Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Query, {\n            query: PEOPLE_QUERY,\n            children: result => {\n              const {\n                loading,\n                error,\n                data\n              } = result;\n              if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"The force is loading your page...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 37\n              }, this);\n              if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Error!! The force didn't find anything\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 35\n              }, this);\n              console.log(data);\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: data.people.map(person => /*#__PURE__*/_jsxDEV(Character, {\n                  person: person\n                }, person.url, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default Characters;","map":{"version":3,"sources":["C:/Users/Letlhogonolo/Documents/Projects/React/starwars/client/src/components/Characters/Characters.tsx"],"names":["React","Component","Fragment","gql","Query","Heading","Container","Character","PEOPLE_QUERY","Characters","render","result","loading","error","data","console","log","people","map","person","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,UAAnC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,YAAY,GAAGL,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,OAAO,MAAMM,UAAN,SAAyBR,SAAzB,CAAmC;AACxCS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEF,YAAd;AAAA,sBACIG,MAAD,IAAiB;AAChB,oBAAM;AAAEC,gBAAAA,OAAF;AAAWC,gBAAAA,KAAX;AAAkBC,gBAAAA;AAAlB,kBAA2BH,MAAjC;AAEA,kBAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,kBAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACXE,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,kCACE,QAAC,QAAD;AAAA,0BACGA,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAiBC,MAAD,iBACf,QAAC,SAAD;AAA4B,kBAAA,MAAM,EAAEA;AAApC,mBAAgBA,MAAM,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA,sBADF;AAOD;AAfH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AA0BD;;AA5BuC;AA+B1C,eAAeX,UAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport { Heading, Container } from \"./styles\";\r\nimport Character from \"./Character/Character\";\r\n\r\nconst PEOPLE_QUERY = gql`\r\n  query PeopleQuery {\r\n    people {\r\n      name\r\n      gender\r\n      mass\r\n      height\r\n      homeworld\r\n      url\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Characters extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Heading>Star Wars Characters</Heading>\r\n        <Container>\r\n          <Fragment>\r\n            <Query query={PEOPLE_QUERY}>\r\n              {(result: any) => {\r\n                const { loading, error, data } = result;\r\n\r\n                if (loading) return <p>The force is loading your page...</p>;\r\n                if (error) return <p>Error!! The force didn't find anything</p>;\r\n                console.log(data);\r\n\r\n                return (\r\n                  <Fragment>\r\n                    {data.people.map((person) => (\r\n                      <Character key={person.url} person={person} />\r\n                    ))}\r\n                  </Fragment>\r\n                );\r\n              }}\r\n            </Query>\r\n          </Fragment>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;\r\n"]},"metadata":{},"sourceType":"module"}