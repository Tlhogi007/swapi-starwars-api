{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Letlhogonolo\\\\Documents\\\\Projects\\\\React\\\\starwars\\\\client\\\\src\\\\components\\\\People\\\\PersonBio\\\\PersonBio.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { Heading, Container, SubHeading, Button, Span } from \"./styles\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Typist from \"react-typist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersonBio = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [personInfo, setPersonInfo] = useState([]);\n  /*\r\n  const loadData = async () => {\r\n    const response = await fetch(`https://swapi.dev/api/people/${id}`);\r\n    const data = await response.json();\r\n    setPersonInfo(data);\r\n    console.log(data);\r\n  };*/\n\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/people/${id}`).then(res => res.json()).then(data => setPersonInfo);\n    /*loadData();*/\n  }, []);\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [personInfo.map(person => console.log(person.name)), /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: [\"PersonBio : \", /*#__PURE__*/_jsxDEV(Span, {\n          children: [\" \", id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(SubHeading, {\n            children: [/*#__PURE__*/_jsxDEV(Typist.Delay, {\n              ms: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), \" Name :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(SubHeading, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Typist.Delay, {\n              ms: 800\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \"Gender :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(SubHeading, {\n            children: [/*#__PURE__*/_jsxDEV(Typist.Delay, {\n              ms: 900\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), \" Mass :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(SubHeading, {\n            children: [/*#__PURE__*/_jsxDEV(Typist.Delay, {\n              ms: 1000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), \" Height :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typist, {\n          children: /*#__PURE__*/_jsxDEV(SubHeading, {\n            children: [/*#__PURE__*/_jsxDEV(Typist.Delay, {\n              ms: 1200\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), \" Homeworld :\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: goBack,\n          children: \" Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PersonBio, \"avf3bD/UA3p2qBL0/hd9CPk32N4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = PersonBio;\nexport default PersonBio;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonBio\");","map":{"version":3,"sources":["C:/Users/Letlhogonolo/Documents/Projects/React/starwars/client/src/components/People/PersonBio/PersonBio.tsx"],"names":["React","useEffect","useState","Fragment","Heading","Container","SubHeading","Button","Span","useParams","useHistory","Typist","PersonBio","id","history","personInfo","setPersonInfo","fetch","then","res","json","data","goBack","map","person","console","log","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\n\r\nimport { Heading, Container, SubHeading, Button, Span } from \"./styles\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Typist from \"react-typist\";\r\n\r\nconst PersonBio = () => {\r\n  const { id }: any = useParams();\r\n  const history = useHistory();\r\n\r\n  const [personInfo, setPersonInfo]: any = useState([]);\r\n  /*\r\n  const loadData = async () => {\r\n    const response = await fetch(`https://swapi.dev/api/people/${id}`);\r\n    const data = await response.json();\r\n    setPersonInfo(data);\r\n    console.log(data);\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    fetch(`https://swapi.dev/api/people/${id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setPersonInfo);\r\n    /*loadData();*/\r\n  }, []);\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {personInfo.map((person) => console.log(person.name))}\r\n      <Fragment>\r\n        <Heading>\r\n          PersonBio : <Span> {id} </Span>\r\n        </Heading>\r\n\r\n        <Container>\r\n          <Typist>\r\n            <SubHeading>\r\n              <Typist.Delay ms={500} /> Name :\r\n            </SubHeading>\r\n          </Typist>\r\n\r\n          <Typist>\r\n            <SubHeading>\r\n              {\" \"}\r\n              <Typist.Delay ms={800} />\r\n              Gender :\r\n            </SubHeading>\r\n          </Typist>\r\n\r\n          <Typist>\r\n            <SubHeading>\r\n              <Typist.Delay ms={900} /> Mass :\r\n            </SubHeading>\r\n          </Typist>\r\n          <Typist>\r\n            <SubHeading>\r\n              <Typist.Delay ms={1000} /> Height :\r\n            </SubHeading>\r\n          </Typist>\r\n\r\n          <Typist>\r\n            <SubHeading>\r\n              <Typist.Delay ms={1200} /> Homeworld :\r\n            </SubHeading>\r\n          </Typist>\r\n\r\n          <Button onClick={goBack}> Back</Button>\r\n        </Container>\r\n      </Fragment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonBio;\r\n"]},"metadata":{},"sourceType":"module"}